/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> rightSideView(TreeNode* root) {
     vector<int> ans; 
        recursion(0, ans, root); 
        return ans;
    }

    void recursion(int level, vector<int>& ans, TreeNode* root) {
        if (root == NULL) return; 

        // If this is the first time visiting this level, add the node's value
        if (level == ans.size()) {
            ans.push_back(root->val);
        }

        // Traverse right subtree first
        recursion(level + 1, ans, root->right);
        // Traverse left subtree next
        recursion(level + 1, ans, root->left);
    }
};
